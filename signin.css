* {
    box-sizing: border-box;
}

body {
    width: 100vw;
    height: 100vh;
    background-size: cover;
    overflow: hidden;
    font-size: 12px;
    background-image: url(image.jpeg);
}

.center {
    position: relative;
    top: 50%;
    left: 50%;
    display: inline-block;
    width: 275px;
    height: 490px;
    border-radius: 50px;
    transform: translate(-50%, -50%);
    overflow: hidden;
    background-image: linear-gradient(to top right, #da8da3, #eca9da);
}

/* This is a CSS media query that targets screens with a maximum height of 500 pixels. */
@media screen and (max-height: 500px) {
    /* This is a CSS rule that applies to elements with the class "center". */
    .center {
        /* This property specifies the CSS property to be transitioned and the duration of the transition. */
        transition: transform 0.5s;
        /* This property applies a 2D transformation to the element, allowing it to be translated and scaled. */
        transform: translate(-50%, -50%) scale(0.8);
    }
}

.center .ear {
    position: absolute;
    top: -120px;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    background-color: #362938;
    transform-style: preserve-3d;
}

.center .ear.ear--left {
    left: -200px;
    transform-origin: 100% 0;
    transform: rotateY(115deg) rotateX(1deg);
    box-shadow:
                0 2px 2px rgba(0, 0, 0, 0.2),
                0 4px 4px rgba(0, 0, 0, 0.2),
                0 8px 8px rgba(0, 0, 0, 0.2),
                0 6px 16px rgba(0, 0, 0, 0.2),
                0 2px 32px rgba(0, 0, 0, 0.2),
                0 4px 64px rgba(0, 0, 0, 0.2);
}

.center .ear.ear--right {
    right: -200px;
    transform-origin: 0 100%;
    transform: rotateY(121deg) rotateX(-5deg);
    box-shadow:
                0 2px 2px rgba(0, 0, 0, 0.2),
                0 4px 4px rgba(0, 0, 0, 0.2),
                0 8px 8px rgba(0, 0, 0, 0.2),
                0 6px 16px rgba(0, 0, 0, 0.2),
                0 2px 32px rgba(0, 0, 0, 0.2),
                0 4px 64px rgba(0, 0, 0, 0.1);
}

.center .face {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 200px;
    height: 150px;
    margin: 80px auto 10px;
    --rotate-head: 0deg;
    transform: rotate(var(--rotate-head));
    transition: transform 0.2s;
    transform-origin: center 20px;
}

.center .eye {
    display: inline-block;
    width: 25px;
    height: 25px;
    border-radius: 50%;
    background-color: #243946;
}

.center .eye.eye--left {
    margin-right: 40px;
}

.center .eye.eye--right {
    margin-left: 40px;
}

.center .eye .glow {
    position: relative;
    top: 3px;
    right: -12px;
    width: 12px;
    height: 6px;
    border-radius: 50%;
    background-image: radial-gradient(circle at 40% 50%, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0.7) 30%, rgba(255, 255, 255, 0) 100%);
    transform: rotateZ(38deg);
    box-shadow: 0 0 4px 1px rgba(255, 255, 255, 0.7) inset;

}

.center .nose {
    position: relative;
    top: 30px;
    transform: scale(1.1);
}

.center .nose .glow {
    position: absolute;
    top: 3px;
    left: 32%;
    width: 15px;
    height: 8px;
    border-radius: 50%;
    background-color: #476375;
}
.center .mouth {
    position: relative;
    margin-top: 45px;
}

.center svg.smile {
    position: absolute;
    left: -28px;
    top: -19px;
    transform: scaleX(1.3);
    stroke: #243946;
    filter: drop-shadow(0px 2px 3px rgba(0,0,0,0.5));
}

.center .mouth-hole {
    position: absolute;
    top: 0;
    left: -50%;
    width: 60px;
    height: 15px;
    border-radius: 50%/100% 150% 0% 0%;
    transform: rotate(180deg);
    background-color: #243946;
    z-index: -1;
}

.center .tongue {
    position: relative;
    top: 5px;
    width: 30px;
    height: 20px;
    background-color: #ffd7dd;
    transform-origin: top;
    transform: rotateX(60deg);
}

.center .tongue.breath {
    -webkit-animation: breath 0.3s infinite linear;
    animation: breath 0.3s infinite linear;
}

.center .tongue-top {
    position: absolute;
    bottom: -15px;
    width: 30px;
    height: 30px;
    border-radius: 15px;
    background-color: #ffd7dd;
}

.center .line {
    position: absolute;
    top: 0;
    width: 30px;
    height: 5px;
    background-color: #fcb7bf;
}

.center .median {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 4px;
    height: 25px;
    border-radius: 5px;
    background-color: #fcb7bf;
}

.center .hands {
    position: relative;
}

.center .hands .hand {
    position: absolute;
    top: -6px;
    display: flex;
    transition: transform 0.5s ease-in-out;
    z-index: 1;
}

.center .hands .hand--left {
    left: 50px;
}

.center .hands .hand--left.hide {
    transform: translate(2px, -155px) rotate(-160deg);
}

.center .hands .hand--left.peek {
    transform: translate(0px, -120px) rotate(-160deg);
}

.center .hands .hand--right {
    left: 170px;
}

.center .hands .hand--right.hide {
    transform: translate(-6px, -155px) rotate(160deg);
}

.center .hands .hand--right.peek {
    transform: translate(-4px, -120px) rotate(160deg);
}

.center .hands .finger {
    position: relative;
    z-index: 0;
}

.center .hands .finger .bone {
    width: 20px;
    height: 20px;
    border: 2px solid #131414;
    border-bottom: none;
    border-top: none;
    background-color: #6c7c33;
}

.center .hands .finger .nail {
    position: absolute;
    left: 0;
    top: 10px;
    width: 20px;
    height: 18px;
    border-radius: 40%;
    border: 2px solid #141414;
    background-color: #fac555;
    z-index: -1;
}

.center .hands .finger:nth-child(1),
.center .hands .finger:nth-child(3) {
    left: 4px;
    z-index: 1;
}

.center .hands .finger:nth-child(1) .bone,
.center .hands .finger:nth-child(3) .bone {
    height: 10px;
}

.center .hands .finger:nth-child(3) {
    left: -4px;
}

.center .hands .finger:nth-child(2) {
    top: -5px;
    z-index: 2;
}

.center .hands .finger:nth-child(1) .nail,
.center .hands .finger:nth-child(3) .nail {
    top: 0px;
}

/* Set the container's position to relative, display it as a flex container with a vertical direction */
.center .login {
    position: relative;
    display: flex;
    flex-direction: column;
    }

    /* Set the label's padding to add some space on its left and right */
    .center .login label {
    position: relative;
    padding: 0 20px;
    }

    /* Set the label's position to absolute and move it down to the center of the container */
    .center .login label {
    position: absolute;
    top: 40%;
    left: 35px;
    color: #bbb;
    }

    /* Shift the label's position slightly to the right */
    .center .login label {
    position: relative;
    left: 1px;
    }

    /* Set the input and button's width to 100% and height to 35px, with no borders and rounded edges */
    .center .login input,
    .center .login .login-button {
    width: 100%;
    height: 35px;
    border: none !important;
    border-radius: 10px 90px;
    }

    .login-button {
        background-color: #441280;
        border: none !important;
        border-radius: 30px 90px;
        color: rgb(250, 247, 247);
        cursor: pointer;
        font-size: 15px;
        font-weight: bold;
        height: 35px;
        margin-top: 20px;
        outline: none;
        padding: 10px 20px;
        transition: transform 0.1s;
        width: calc(100% - 40px);
    }

    .login-button:hover {
        background-color: #64b5e1;
    }

    .login-button:active {
        transform: scale(0.95);
    }

    /* Add padding to the input's left side and remove any box-shadow or outline */
    .center .login input {
    padding: 0 20px 0 40px;
    margin: 5px 0;
    box-shadow: none;
    outline: none;
    }

    /* Change the placeholder text color to a light gray */
    .center .login input::placeholder {
    color: rgb(99, 176, 187);
    }


@-webkit-keyframes breath {
    0%, 100% {
    transform: rotateX(0deg);
    }
    50% {
    transform: rotateX(60deg);
    }
}

@keyframes breath {
    0%, 100% {
    transform: rotateX(0deg);
    }
    50% {
    transform: rotateX(60deg);
    }
}